name: twenty

services:
  # PostgreSQL database
  db:
    image: postgres:16
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PG_DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${SERVICE_PASSWORD_POSTGRES:-postgres}
    healthcheck:
      test: pg_isready -U ${PG_DATABASE_USER:-postgres} -h localhost -d postgres
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  # Redis cache
  redis:
    image: redis
    restart: always
    command: ["--maxmemory-policy", "noeviction"]

  # Twenty server
  server:
    image: twentycrm/twenty:${TAG:-latest}
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
    ports:
      - "3000:3000"
    environment:
      NODE_PORT: 3000
      SERVER_URL: ${SERVICE_FQDN_SERVER:-http://localhost:3000}
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER:-postgres}:${SERVICE_PASSWORD_POSTGRES:-postgres}@db:5432/default
      REDIS_URL: redis://redis:6379
      DISABLE_DB_MIGRATIONS: ${DISABLE_DB_MIGRATIONS:-false}
      DISABLE_CRON_JOBS_REGISTRATION: ${DISABLE_CRON_JOBS_REGISTRATION:-false}
      
      STORAGE_TYPE: ${STORAGE_TYPE:-local}
      APP_SECRET: ${SERVICE_BASE64_64_APP:55tcB1yTVDaB2lhETNQphz9oxmArAf6pv8LqMezEiUkWnz6OdUPMSkKmF2NN8jJW}

    depends_on:
      db:
        condition: service_healthy
    restart: always

  # Twenty worker
  worker:
    image: twentycrm/twenty:${TAG:-latest}
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
    command: ["yarn", "worker:prod"]
    environment:
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER:-postgres}:${SERVICE_PASSWORD_POSTGRES:-postgres}@db:5432/default
      SERVER_URL: ${SERVICE_FQDN_SERVER:-http://localhost:3000}
      REDIS_URL: redis://redis:6379
      DISABLE_DB_MIGRATIONS: "true"
      DISABLE_CRON_JOBS_REGISTRATION: "true"
      STORAGE_TYPE: ${STORAGE_TYPE:-local}
      APP_SECRET: ${SERVICE_BASE64_64_APP:55tcB1yTVDaB2lhETNQphz9oxmArAf6pv8LqMezEiUkWnz6OdUPMSkKmF2NN8jJW}

    depends_on:
      db:
        condition: service_healthy
      server:
        condition: service_started
    restart: always

volumes:
  db-data:
  server-local-data:
