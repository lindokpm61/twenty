name: twenty

services:
  # Migration container - creates schemas and runs migrations
  migration:
    image: twentycrm/twenty:latest
    command: |
      sh -c "
        echo 'Installing PostgreSQL client...'
        apt-get update && apt-get install -y postgresql-client || true
        echo 'Waiting for database...'
        until pg_isready -h db -U postgres -d postgres; do
          sleep 1
        done
        echo 'Creating database and schemas...'
        PGPASSWORD=db_dc594fe426008af06a79f500 psql -h db -U postgres -d postgres -c 'CREATE DATABASE \"default\";' || true
        PGPASSWORD=db_dc594fe426008af06a79f500 psql -h db -U postgres -d default -c 'CREATE SCHEMA IF NOT EXISTS core; CREATE SCHEMA IF NOT EXISTS metadata;' || true
        echo 'Running migrations...'
        yarn database:migrate:prod || true
        echo 'Migration completed!'
      "
    environment:
      PG_DATABASE_URL: postgres://postgres:db_dc594fe426008af06a79f500@db:5432/default
      REDIS_URL: redis://redis:6379
      APP_SECRET: 55tcB1yTVDaB2lhETNQphz9oxmArAf6pv8LqMezEiUkWnz6OdUPMSkKmF2NN8jJW
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: "no"

  server:
    image: twentycrm/twenty:latest
    user: root
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
      - docker-data:/app/docker-data
    ports:
      - "3000:3000"
    environment:
      NODE_PORT: 3000
      PG_DATABASE_URL: postgres://postgres:db_dc594fe426008af06a79f500@db:5432/default
      SERVER_URL: $TWENTY_DOMAIN
      REDIS_URL: redis://redis:6379
      
      # Migrations disabled - handled by migration container
      DISABLE_DB_MIGRATIONS: "true"
      DISABLE_CRON_JOBS_REGISTRATION: false

      STORAGE_TYPE: local
      STORAGE_S3_REGION: 
      STORAGE_S3_NAME: 
      STORAGE_S3_ENDPOINT: 

      APP_SECRET: 55tcB1yTVDaB2lhETNQphz9oxmArAf6pv8LqMezEiUkWnz6OdUPMSkKmF2NN8jJW
      ACCESS_TOKEN_SECRET: RTqoAsZHdutAkiJx1N65lsURpuj/uQb5
      LOGIN_TOKEN_SECRET: pn2/xb6rGHfUwLhgj8Xjuv0k0Iw9rB0+
      REFRESH_TOKEN_SECRET: Q54S1LZxpirZtaWTFWYQJFeX8LDfvuxX
      FILE_TOKEN_SECRET: caAIWEfvWc5ygA0yLw553qCef/Dhsn8B

      # Optional integrations (set to false by default to avoid validation issues)
      MESSAGING_PROVIDER_GMAIL_ENABLED: false
      CALENDAR_PROVIDER_GOOGLE_ENABLED: false
      AUTH_GOOGLE_CLIENT_ID: 
      AUTH_GOOGLE_CLIENT_SECRET: 
      AUTH_GOOGLE_CALLBACK_URL: 
      AUTH_GOOGLE_APIS_CALLBACK_URL: 

      CALENDAR_PROVIDER_MICROSOFT_ENABLED: false
      MESSAGING_PROVIDER_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_CLIENT_ID: 
      AUTH_MICROSOFT_CLIENT_SECRET: 
      AUTH_MICROSOFT_CALLBACK_URL: 
      AUTH_MICROSOFT_APIS_CALLBACK_URL: 

      EMAIL_FROM_ADDRESS: contact@yourdomain.com
      EMAIL_FROM_NAME: John from YourDomain
      EMAIL_SYSTEM_ADDRESS: system@yourdomain.com
      EMAIL_DRIVER: smtp
      EMAIL_SMTP_HOST: 
      EMAIL_SMTP_PORT: 465
      EMAIL_SMTP_USER: 
      EMAIL_SMTP_PASSWORD: VbtyeXsHcoXG5ucWyb9A89BXUY35EhrK

    depends_on:
      migration:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3000/healthz
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  worker:
    image: twentycrm/twenty:latest
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
    command: ["yarn", "worker:prod"]
    environment:
      PG_DATABASE_URL: postgres://postgres:db_dc594fe426008af06a79f500@db:5432/default
      SERVER_URL: $TWENTY_DOMAIN
      REDIS_URL: redis://redis:6379
      DISABLE_DB_MIGRATIONS: "true"

      STORAGE_TYPE: local
      STORAGE_S3_REGION: 
      STORAGE_S3_NAME: 
      STORAGE_S3_ENDPOINT: 

      APP_SECRET: 55tcB1yTVDaB2lhETNQphz9oxmArAf6pv8LqMezEiUkWnz6OdUPMSkKmF2NN8jJW
      ACCESS_TOKEN_SECRET: RTqoAsZHdutAkiJx1N65lsURpuj/uQb5
      LOGIN_TOKEN_SECRET: pn2/xb6rGHfUwLhgj8Xjuv0k0Iw9rB0+
      REFRESH_TOKEN_SECRET: Q54S1LZxpirZtaWTFWYQJFeX8LDfvuxX
      FILE_TOKEN_SECRET: caAIWEfvWc5ygA0yLw553qCef/Dhsn8B

      MESSAGING_PROVIDER_GMAIL_ENABLED: false
      CALENDAR_PROVIDER_GOOGLE_ENABLED: false
      AUTH_GOOGLE_CLIENT_ID: 
      AUTH_GOOGLE_CLIENT_SECRET: 
      AUTH_GOOGLE_CALLBACK_URL: 
      AUTH_GOOGLE_APIS_CALLBACK_URL: 

      CALENDAR_PROVIDER_MICROSOFT_ENABLED: false
      MESSAGING_PROVIDER_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_CLIENT_ID: 
      AUTH_MICROSOFT_CLIENT_SECRET: 
      AUTH_MICROSOFT_CALLBACK_URL: 
      AUTH_MICROSOFT_APIS_CALLBACK_URL: 

      EMAIL_FROM_ADDRESS: contact@yourdomain.com
      EMAIL_FROM_NAME: John from YourDomain
      EMAIL_SYSTEM_ADDRESS: system@yourdomain.com
      EMAIL_DRIVER: smtp
      EMAIL_SMTP_HOST: 
      EMAIL_SMTP_PORT: 465
      EMAIL_SMTP_USER: 
      EMAIL_SMTP_PASSWORD: VbtyeXsHcoXG5ucWyb9A89BXUY35EhrK

    depends_on:
      migration:
        condition: service_completed_successfully
      server:
        condition: service_started
    restart: always

  db:
    image: postgres:16
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: db_dc594fe426008af06a79f500
      POSTGRES_DB: default
    healthcheck:
      test: pg_isready -U postgres -h localhost -d default
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  redis:
    image: redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  docker-data:
  db-data:
  server-local-data:
