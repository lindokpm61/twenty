name: twenty

services:
  # Migration container - creates schemas and runs migrations
  migration:
    image: twentycrm/twenty:${TAG:-latest}
    command: |
      sh -c "
        echo 'Installing PostgreSQL client...'
        apt-get update && apt-get install -y postgresql-client || true
        echo 'Waiting for database...'
        until pg_isready -h ${PG_DATABASE_HOST:-db} -U ${PG_DATABASE_USER:-postgres} -d postgres; do
          sleep 1
        done
        echo 'Creating database and schemas...'
        PGPASSWORD=$SERVICE_PASSWORD_DB psql -h ${PG_DATABASE_HOST:-db} -U ${PG_DATABASE_USER:-postgres} -d postgres -c 'CREATE DATABASE \"default\";' || true
        PGPASSWORD=$SERVICE_PASSWORD_DB psql -h ${PG_DATABASE_HOST:-db} -U ${PG_DATABASE_USER:-postgres} -d default -c 'CREATE SCHEMA IF NOT EXISTS core; CREATE SCHEMA IF NOT EXISTS metadata;' || true
        echo 'Running migrations...'
        yarn database:migrate:prod || true
        echo 'Migration completed!'
      "
    environment:
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER:-postgres}:$SERVICE_PASSWORD_DB@${PG_DATABASE_HOST:-db}:${PG_DATABASE_PORT:-5432}/default
      REDIS_URL: $REDIS_URL
      APP_SECRET: $SERVICE_PASSWORD_APPSECRET
    depends_on:
      migration:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: "no"

  server:
    image: twentycrm/twenty:${TAG:-latest}
    user: root
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
      - docker-data:/app/docker-data
    ports:
      - "3000:3000"
    environment:
      NODE_PORT: 3000
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER:-postgres}:$SERVICE_PASSWORD_DB@${PG_DATABASE_HOST:-db}:${PG_DATABASE_PORT:-5432}/default
      SERVER_URL: $TWENTY_DOMAIN
      REDIS_URL: $REDIS_URL
      
      # Migrations disabled - handled by migration container
      DISABLE_DB_MIGRATIONS: "true"
      DISABLE_CRON_JOBS_REGISTRATION: false

      STORAGE_TYPE: $STORAGE_TYPE
      STORAGE_S3_REGION: $STORAGE_S3_REGION
      STORAGE_S3_NAME: $STORAGE_S3_NAME
      STORAGE_S3_ENDPOINT: $STORAGE_S3_ENDPOINT

      APP_SECRET: $SERVICE_PASSWORD_APPSECRET

      # Optional integrations (set to false by default to avoid validation issues)
      MESSAGING_PROVIDER_GMAIL_ENABLED: false
      CALENDAR_PROVIDER_GOOGLE_ENABLED: false
      AUTH_GOOGLE_CLIENT_ID: $AUTH_GOOGLE_CLIENT_ID
      AUTH_GOOGLE_CLIENT_SECRET: $AUTH_GOOGLE_CLIENT_SECRET
      AUTH_GOOGLE_CALLBACK_URL: $AUTH_GOOGLE_CALLBACK_URL
      AUTH_GOOGLE_APIS_CALLBACK_URL: $AUTH_GOOGLE_APIS_CALLBACK_URL

      CALENDAR_PROVIDER_MICROSOFT_ENABLED: false
      MESSAGING_PROVIDER_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_CLIENT_ID: $AUTH_MICROSOFT_CLIENT_ID
      AUTH_MICROSOFT_CLIENT_SECRET: $AUTH_MICROSOFT_CLIENT_SECRET
      AUTH_MICROSOFT_CALLBACK_URL: $AUTH_MICROSOFT_CALLBACK_URL
      AUTH_MICROSOFT_APIS_CALLBACK_URL: $AUTH_MICROSOFT_APIS_CALLBACK_URL

      EMAIL_FROM_ADDRESS: contact@yourdomain.com
      EMAIL_FROM_NAME: John from YourDomain
      EMAIL_SYSTEM_ADDRESS: system@yourdomain.com
      EMAIL_DRIVER: smtp
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PORT: 465
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      EMAIL_SMTP_PASSWORD: ${SERVICE_PASSWORD_SMTP}

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3000/healthz
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  worker:
    image: twentycrm/twenty:${TAG:-latest}
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
    command: ["yarn", "worker:prod"]
    environment:
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER:-postgres}:$SERVICE_PASSWORD_DB@${PG_DATABASE_HOST:-db}:${PG_DATABASE_PORT:-5432}/default
      SERVER_URL: $TWENTY_DOMAIN
      REDIS_URL: $REDIS_URL
      DISABLE_DB_MIGRATIONS: "true"

      STORAGE_TYPE: $STORAGE_TYPE
      STORAGE_S3_REGION: $STORAGE_S3_REGION
      STORAGE_S3_NAME: $STORAGE_S3_NAME
      STORAGE_S3_ENDPOINT: $STORAGE_S3_ENDPOINT

      APP_SECRET: $SERVICE_PASSWORD_APPSECRET

      MESSAGING_PROVIDER_GMAIL_ENABLED: false
      CALENDAR_PROVIDER_GOOGLE_ENABLED: false
      AUTH_GOOGLE_CLIENT_ID: $AUTH_GOOGLE_CLIENT_ID
      AUTH_GOOGLE_CLIENT_SECRET: $AUTH_GOOGLE_CLIENT_SECRET
      AUTH_GOOGLE_CALLBACK_URL: $AUTH_GOOGLE_CALLBACK_URL
      AUTH_GOOGLE_APIS_CALLBACK_URL: $AUTH_GOOGLE_APIS_CALLBACK_URL

      CALENDAR_PROVIDER_MICROSOFT_ENABLED: false
      MESSAGING_PROVIDER_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_CLIENT_ID: $AUTH_MICROSOFT_CLIENT_ID
      AUTH_MICROSOFT_CLIENT_SECRET: $AUTH_MICROSOFT_CLIENT_SECRET
      AUTH_MICROSOFT_CALLBACK_URL: $AUTH_MICROSOFT_CALLBACK_URL
      AUTH_MICROSOFT_APIS_CALLBACK_URL: $AUTH_MICROSOFT_APIS_CALLBACK_URL

      EMAIL_FROM_ADDRESS: contact@yourdomain.com
      EMAIL_FROM_NAME: John from YourDomain
      EMAIL_SYSTEM_ADDRESS: system@yourdomain.com
      EMAIL_DRIVER: smtp
      EMAIL_SMTP_HOST: $EMAIL_SMTP_HOST
      EMAIL_SMTP_PORT: 465
      EMAIL_SMTP_USER: $EMAIL_SMTP_USER
      EMAIL_SMTP_PASSWORD: $SERVICE_PASSWORD_SMTP

    depends_on:
      migration:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      server:
        condition: service_healthy
    restart: always

  db:
    image: postgres:16
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PG_DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: $SERVICE_PASSWORD_DB
      POSTGRES_DB: default
    healthcheck:
      test: pg_isready -U ${PG_DATABASE_USER:-postgres} -h localhost -d default
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  redis:
    image: redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  docker-data:
  db-data:
  server-local-data:
