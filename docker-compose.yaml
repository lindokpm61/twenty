name: twenty

services:
  server:
    image: twentycrm/twenty:v0.10.4
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
    ports:
      - "3000:3000"
    environment:
      NODE_PORT: 3000
      PG_DATABASE_URL: postgres://postgres:${SERVICE_PASSWORD_POSTGRES}@db:5432/default
      SERVER_URL: ${TWENTY_DOMAIN}
      REDIS_URL: redis://redis:6379
      
      # Let server handle migrations - no separate migration container needed
      DISABLE_DB_MIGRATIONS: false
      DISABLE_CRON_JOBS_REGISTRATION: false

      # Storage - Local only
      STORAGE_TYPE: local

      # Essential secrets
      APP_SECRET: ${SERVICE_BASE64_64_APP}
      ACCESS_TOKEN_SECRET: ${SERVICE_BASE64_32_ACCESS}
      LOGIN_TOKEN_SECRET: ${SERVICE_BASE64_32_LOGIN}
      REFRESH_TOKEN_SECRET: ${SERVICE_BASE64_32_REFRESH}
      FILE_TOKEN_SECRET: ${SERVICE_BASE64_32_FILE}

      # Disable all optional integrations
      MESSAGING_PROVIDER_GMAIL_ENABLED: false
      CALENDAR_PROVIDER_GOOGLE_ENABLED: false
      CALENDAR_PROVIDER_MICROSOFT_ENABLED: false
      MESSAGING_PROVIDER_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_ENABLED: false

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3000/healthz
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  worker:
    image: twentycrm/twenty:v0.10.4
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
    command: ["yarn", "worker:prod"]
    environment:
      PG_DATABASE_URL: postgres://postgres:${SERVICE_PASSWORD_POSTGRES}@db:5432/default
      SERVER_URL: ${TWENTY_DOMAIN}
      REDIS_URL: redis://redis:6379
      DISABLE_DB_MIGRATIONS: true

      # Storage - Local only
      STORAGE_TYPE: local

      # Essential secrets
      APP_SECRET: ${SERVICE_BASE64_64_APP}
      ACCESS_TOKEN_SECRET: ${SERVICE_BASE64_32_ACCESS}
      LOGIN_TOKEN_SECRET: ${SERVICE_BASE64_32_LOGIN}
      REFRESH_TOKEN_SECRET: ${SERVICE_BASE64_32_REFRESH}
      FILE_TOKEN_SECRET: ${SERVICE_BASE64_32_FILE}

      # Disable all optional integrations
      MESSAGING_PROVIDER_GMAIL_ENABLED: false
      CALENDAR_PROVIDER_GOOGLE_ENABLED: false
      CALENDAR_PROVIDER_MICROSOFT_ENABLED: false
      MESSAGING_PROVIDER_MICROSOFT_ENABLED: false
      AUTH_MICROSOFT_ENABLED: false

    depends_on:
      server:
        condition: service_healthy
    restart: always

  db:
    image: postgres:16
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${SERVICE_PASSWORD_POSTGRES}
      POSTGRES_DB: default
    healthcheck:
      test: pg_isready -U postgres -h localhost -d default
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  redis:
    image: redis
    restart: always
    command: ["--maxmemory-policy", "noeviction"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  db-data:
  server-local-data:
